{"filter":false,"title":"products_controller.rb","tooltip":"/app/controllers/products_controller.rb","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":33,"column":2},"end":{"row":48,"column":5},"action":"remove","lines":["def create","    @product = Product.new(product_params)","","    respond_to do |format|","      if @product.save","        format.html { redirect_to @product,","          notice: 'Product was successfully created.' }","        format.json { render :show, status: :created,","          location: @product }","      else","        format.html { render :new }","        format.json { render json: @product.errors,","          status: :unprocessable_entity }","      end","    end","  end"],"id":11},{"start":{"row":33,"column":2},"end":{"row":46,"column":3},"action":"insert","lines":["def create","  ...","  respond_to do |format|","    if @reservation.save","      format.html do","        redirect_to '/'","      end","      format.json { render json: @reservation.to_json }","    else","      format.html { render 'new'} ## Specify the format in which you are rendering \"new\" page","      format.json { render json: @reservation.errors } ## You might want to specify a json format as well","    end","  end","end"]}],[{"start":{"row":34,"column":0},"end":{"row":34,"column":5},"action":"remove","lines":["  ..."],"id":12}],[{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"remove","lines":["",""],"id":13}],[{"start":{"row":45,"column":0},"end":{"row":45,"column":3},"action":"remove","lines":["end"],"id":15}],[{"start":{"row":0,"column":0},"end":{"row":90,"column":0},"action":"remove","lines":["#---","# Excerpted from \"Agile Web Development with Rails 5.1\",","# published by The Pragmatic Bookshelf.","# Copyrights apply to this code. It may not be used to create training material,","# courses, books, articles, and the like. Contact us if you are in doubt.","# We make no guarantees that this code is fit for any purpose.","# Visit http://www.pragmaticprogrammer.com/titles/rails51 for more book information.","#---","class ProductsController < ApplicationController","  before_action :set_product, only: [:show, :edit, :update, :destroy]","","  # GET /products","  # GET /products.json","  def index","    @products = Product.all","  end","","  # GET /products/1","  # GET /products/1.json","  def show","  end","","  # GET /products/new","  def new","    @product = Product.new","  end","","  # GET /products/1/edit","  def edit","  end","","  # POST /products","  # POST /products.json","  def create","  respond_to do |format|","    if @reservation.save","      format.html do","        redirect_to '/'","      end","      format.json { render json: @reservation.to_json }","    else","      format.html { render 'new'} ## Specify the format in which you are rendering \"new\" page","      format.json { render json: @reservation.errors } ## You might want to specify a json format as well","    end","  end","","","  # PATCH/PUT /products/1","  # PATCH/PUT /products/1.json","  def update","    respond_to do |format|","      if @product.update(product_params)","        format.html { redirect_to @product,","          notice: 'Product was successfully updated.' }","        format.json { render :show, status: :ok, location: @product }","","        @products = Product.all","        ActionCable.server.broadcast 'products',","          html: render_to_string('store/index', layout: false)","      else","        format.html { render :edit }","        format.json { render json: @product.errors,","          status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /products/1","  # DELETE /products/1.json","  def destroy","    @product.destroy","    respond_to do |format|","      format.html { redirect_to products_url,","          notice: 'Product was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_product","      @product = Product.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white","    # list through.","    def product_params","      params.require(:product).permit(:title, :description, :image_url, :price)","    end","end",""],"id":16},{"start":{"row":0,"column":0},"end":{"row":37,"column":10},"action":"insert","lines":["class ProductsController < ApplicationController","before_action :set_product, only: [:show, :edit, :update, :destroy]","# GET /products","# GET /products.json","def index","@products = Product.all","end","# GET /products/1","# GET /products/1.json","def show","end","# GET /products/new","def new","@product = Product.new","end","# GET /products/1/edit","def edit","end","# POST /products","# POST /products.json","def create","@product = Product.new(product_params)","respond_to do |format|","if @product.save","format.html { redirect_to @product,","notice: 'Product was successfully created.' }","format.json { render :show, status: :created,","location: @product }","else","format.html { render :new }","format.json { render json: @product.errors,","status: :unprocessable_entity }","end","end","end","# PATCH/PUT /products/1","# PATCH/PUT /products/1.json","def update"]}],[{"start":{"row":37,"column":10},"end":{"row":38,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":38,"column":0},"end":{"row":38,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":38,"column":2},"end":{"row":70,"column":3},"action":"insert","lines":["respond_to do |format|","if @product.update(product_params)","format.html { redirect_to @product,","notice: 'Product was successfully updated.' }","format.json { render :show, status: :ok, location: @product }","else","format.html { render :edit }","format.json { render json: @product.errors,","status: :unprocessable_entity }","end","end","end","# DELETE /products/1","# DELETE /products/1.json","def destroy","@product.destroy","respond_to do |format|","format.html { redirect_to products_url,","notice: 'Product was successfully destroyed.' }","format.json { head :no_content }","end","end","private","# Use callbacks to share common setup or constraints between actions.","def set_product","@product = Product.find(params[:id])","end","# Never trust parameters from the scary internet, only allow the white","# list through.","def product_params","params.require(:product).permit(:title, :description, :image_url, :price)","end","end"],"id":18}],[{"start":{"row":42,"column":61},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":19}],[{"start":{"row":43,"column":0},"end":{"row":45,"column":54},"action":"insert","lines":["@products = Product.all","➤ ActionCable.server.broadcast 'products',","➤ html: render_to_string('store/index', layout: false)"],"id":20}],[{"start":{"row":44,"column":0},"end":{"row":44,"column":1},"action":"remove","lines":["➤"],"id":21}],[{"start":{"row":45,"column":0},"end":{"row":45,"column":1},"action":"remove","lines":["➤"],"id":22}]]},"ace":{"folds":[],"scrolltop":10.899932861328125,"scrollleft":0,"selection":{"start":{"row":12,"column":7},"end":{"row":12,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1512676854220,"hash":"bb3ab7e52e010ae5503f9db0d4be9010c0c5f2d9"}